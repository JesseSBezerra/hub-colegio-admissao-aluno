name: Build, Deploy Infra & App

on:
  push:
    branches:
      - main

jobs:
  decidir:
    runs-on: ubuntu-latest
    outputs:
      destroy_flag: ${{ steps.check.outputs.destroy_flag }}
      account: ${{ steps.check.outputs.account }}
      project_name: ${{ steps.check.outputs.project_name }}
    steps:
      - name: Checkout do código
        uses: actions/checkout@v3

      - name: Instalar yq
        run: sudo apt-get update && sudo apt-get install -y yq

      - name: Ler projeto.yml
        id: check
        run: |
          flag=$(yq eval '.destroy' projeto.yml)
          account=$(yq eval '.account' projeto.yml)
          project_name=$(yq eval '.["project-name"]' projeto.yml)
          echo "destroy_flag=$flag" >> $GITHUB_OUTPUT
          echo "account=$account" >> $GITHUB_OUTPUT
          echo "project_name=$project_name" >> $GITHUB_OUTPUT

  build-push-deploy:
    needs: decidir
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ steps.build_tag.outputs.image_tag }}
      ecr_registry: ${{ steps.login-ecr.outputs.registry }}
    if: needs.decidir.outputs.destroy_flag == 'true' || needs.decidir.outputs.destroy_flag == 'false'
    steps:
      - name: Checkout do código
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build com Maven
        if: needs.decidir.outputs.destroy_flag != 'true'
        run: mvn clean package -DskipTests

      - name: Definir tag única da imagem
        id: build_tag
        run: echo "image_tag=${{ github.sha }}" >> $GITHUB_OUTPUT

      - name: Configurar AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: sa-east-1

      - name: Instalar Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.6

      - name: Inicializar Terraform
        run: terraform init
        working-directory: ecr

      - name: Terraform Destroy
        if: needs.decidir.outputs.destroy_flag == 'true'
        run: terraform destroy -auto-approve -var-file="terraform.tfvars"
        working-directory: ecr

      - name: Terraform Apply
        if: needs.decidir.outputs.destroy_flag == 'false' || needs.decidir.outputs.destroy_flag == ''
        run: terraform apply -auto-approve -var-file="terraform.tfvars"
        working-directory: ecr

      - name: Login no ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build da imagem Docker
        run: |
          docker build -t ${{ steps.login-ecr.outputs.registry }}/${{ needs.decidir.outputs.project_name }}:${{ steps.build_tag.outputs.image_tag }} .

      - name: Push da imagem para o ECR
        run: |
          docker push ${{ steps.login-ecr.outputs.registry }}/${{ needs.decidir.outputs.project_name }}:${{ steps.build_tag.outputs.image_tag }}

  terraform:
    needs: [decidir, build-push-deploy]
    runs-on: ubuntu-latest
    if: needs.decidir.outputs.destroy_flag == 'true' || needs.decidir.outputs.destroy_flag == 'false'
    steps:
      - name: Checkout do código
        uses: actions/checkout@v3

      - name: Configurar AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: sa-east-1

      - name: Instalar Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.6

      - name: Inicializar Terraform
        run: terraform init
        working-directory: infra

      - name: Terraform Destroy
        if: needs.decidir.outputs.destroy_flag == 'true'
        run: terraform destroy -auto-approve -var-file="terraform.tfvars"
        working-directory: infra

      - name: Gerar terraform.tfvars com nova imagem
        if: needs.decidir.outputs.destroy_flag != 'true'
        run: |
          echo "ecr_image_url = \"${{ needs.decidir.outputs.account }}.dkr.ecr.sa-east-1.amazonaws.com/${{ needs.decidir.outputs.project_name }}:${{ needs.build-push-deploy.outputs.image_tag }}\"" > infra/terraform.tfvars

      - name: Terraform Apply
        if: needs.decidir.outputs.destroy_flag == 'false' || needs.decidir.outputs.destroy_flag == ''
        run: terraform apply -auto-approve -var-file="terraform.tfvars"
        working-directory: infra