/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package br.com.jdsb.hub.avro;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class CandidatoEvent extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -960849381557722680L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"CandidatoEvent\",\"namespace\":\"br.com.jdsb.hub.avro\",\"fields\":[{\"name\":\"nome\",\"type\":\"string\"},{\"name\":\"dataNascimento\",\"type\":\"string\"},{\"name\":\"curso\",\"type\":\"string\"},{\"name\":\"valorMensalidade\",\"type\":{\"type\":\"string\",\"java-class\":\"java.math.BigDecimal\"}},{\"name\":\"periodo\",\"type\":\"string\"},{\"name\":\"turno\",\"type\":\"string\"},{\"name\":\"cpf\",\"type\":\"string\"},{\"name\":\"codigoMatricula\",\"type\":\"string\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<CandidatoEvent> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<CandidatoEvent> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<CandidatoEvent> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<CandidatoEvent> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<CandidatoEvent> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this CandidatoEvent to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a CandidatoEvent from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a CandidatoEvent instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static CandidatoEvent fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private java.lang.CharSequence nome;
  private java.lang.CharSequence dataNascimento;
  private java.lang.CharSequence curso;
  private java.math.BigDecimal valorMensalidade;
  private java.lang.CharSequence periodo;
  private java.lang.CharSequence turno;
  private java.lang.CharSequence cpf;
  private java.lang.CharSequence codigoMatricula;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public CandidatoEvent() {}

  /**
   * All-args constructor.
   * @param nome The new value for nome
   * @param dataNascimento The new value for dataNascimento
   * @param curso The new value for curso
   * @param valorMensalidade The new value for valorMensalidade
   * @param periodo The new value for periodo
   * @param turno The new value for turno
   * @param cpf The new value for cpf
   * @param codigoMatricula The new value for codigoMatricula
   */
  public CandidatoEvent(java.lang.CharSequence nome, java.lang.CharSequence dataNascimento, java.lang.CharSequence curso, java.math.BigDecimal valorMensalidade, java.lang.CharSequence periodo, java.lang.CharSequence turno, java.lang.CharSequence cpf, java.lang.CharSequence codigoMatricula) {
    this.nome = nome;
    this.dataNascimento = dataNascimento;
    this.curso = curso;
    this.valorMensalidade = valorMensalidade;
    this.periodo = periodo;
    this.turno = turno;
    this.cpf = cpf;
    this.codigoMatricula = codigoMatricula;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return nome;
    case 1: return dataNascimento;
    case 2: return curso;
    case 3: return valorMensalidade;
    case 4: return periodo;
    case 5: return turno;
    case 6: return cpf;
    case 7: return codigoMatricula;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: nome = (java.lang.CharSequence)value$; break;
    case 1: dataNascimento = (java.lang.CharSequence)value$; break;
    case 2: curso = (java.lang.CharSequence)value$; break;
    case 3: valorMensalidade = (java.math.BigDecimal)value$; break;
    case 4: periodo = (java.lang.CharSequence)value$; break;
    case 5: turno = (java.lang.CharSequence)value$; break;
    case 6: cpf = (java.lang.CharSequence)value$; break;
    case 7: codigoMatricula = (java.lang.CharSequence)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'nome' field.
   * @return The value of the 'nome' field.
   */
  public java.lang.CharSequence getNome() {
    return nome;
  }


  /**
   * Sets the value of the 'nome' field.
   * @param value the value to set.
   */
  public void setNome(java.lang.CharSequence value) {
    this.nome = value;
  }

  /**
   * Gets the value of the 'dataNascimento' field.
   * @return The value of the 'dataNascimento' field.
   */
  public java.lang.CharSequence getDataNascimento() {
    return dataNascimento;
  }


  /**
   * Sets the value of the 'dataNascimento' field.
   * @param value the value to set.
   */
  public void setDataNascimento(java.lang.CharSequence value) {
    this.dataNascimento = value;
  }

  /**
   * Gets the value of the 'curso' field.
   * @return The value of the 'curso' field.
   */
  public java.lang.CharSequence getCurso() {
    return curso;
  }


  /**
   * Sets the value of the 'curso' field.
   * @param value the value to set.
   */
  public void setCurso(java.lang.CharSequence value) {
    this.curso = value;
  }

  /**
   * Gets the value of the 'valorMensalidade' field.
   * @return The value of the 'valorMensalidade' field.
   */
  public java.math.BigDecimal getValorMensalidade() {
    return valorMensalidade;
  }


  /**
   * Sets the value of the 'valorMensalidade' field.
   * @param value the value to set.
   */
  public void setValorMensalidade(java.math.BigDecimal value) {
    this.valorMensalidade = value;
  }

  /**
   * Gets the value of the 'periodo' field.
   * @return The value of the 'periodo' field.
   */
  public java.lang.CharSequence getPeriodo() {
    return periodo;
  }


  /**
   * Sets the value of the 'periodo' field.
   * @param value the value to set.
   */
  public void setPeriodo(java.lang.CharSequence value) {
    this.periodo = value;
  }

  /**
   * Gets the value of the 'turno' field.
   * @return The value of the 'turno' field.
   */
  public java.lang.CharSequence getTurno() {
    return turno;
  }


  /**
   * Sets the value of the 'turno' field.
   * @param value the value to set.
   */
  public void setTurno(java.lang.CharSequence value) {
    this.turno = value;
  }

  /**
   * Gets the value of the 'cpf' field.
   * @return The value of the 'cpf' field.
   */
  public java.lang.CharSequence getCpf() {
    return cpf;
  }


  /**
   * Sets the value of the 'cpf' field.
   * @param value the value to set.
   */
  public void setCpf(java.lang.CharSequence value) {
    this.cpf = value;
  }

  /**
   * Gets the value of the 'codigoMatricula' field.
   * @return The value of the 'codigoMatricula' field.
   */
  public java.lang.CharSequence getCodigoMatricula() {
    return codigoMatricula;
  }


  /**
   * Sets the value of the 'codigoMatricula' field.
   * @param value the value to set.
   */
  public void setCodigoMatricula(java.lang.CharSequence value) {
    this.codigoMatricula = value;
  }

  /**
   * Creates a new CandidatoEvent RecordBuilder.
   * @return A new CandidatoEvent RecordBuilder
   */
  public static br.com.jdsb.hub.avro.CandidatoEvent.Builder newBuilder() {
    return new br.com.jdsb.hub.avro.CandidatoEvent.Builder();
  }

  /**
   * Creates a new CandidatoEvent RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new CandidatoEvent RecordBuilder
   */
  public static br.com.jdsb.hub.avro.CandidatoEvent.Builder newBuilder(br.com.jdsb.hub.avro.CandidatoEvent.Builder other) {
    if (other == null) {
      return new br.com.jdsb.hub.avro.CandidatoEvent.Builder();
    } else {
      return new br.com.jdsb.hub.avro.CandidatoEvent.Builder(other);
    }
  }

  /**
   * Creates a new CandidatoEvent RecordBuilder by copying an existing CandidatoEvent instance.
   * @param other The existing instance to copy.
   * @return A new CandidatoEvent RecordBuilder
   */
  public static br.com.jdsb.hub.avro.CandidatoEvent.Builder newBuilder(br.com.jdsb.hub.avro.CandidatoEvent other) {
    if (other == null) {
      return new br.com.jdsb.hub.avro.CandidatoEvent.Builder();
    } else {
      return new br.com.jdsb.hub.avro.CandidatoEvent.Builder(other);
    }
  }

  /**
   * RecordBuilder for CandidatoEvent instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<CandidatoEvent>
    implements org.apache.avro.data.RecordBuilder<CandidatoEvent> {

    private java.lang.CharSequence nome;
    private java.lang.CharSequence dataNascimento;
    private java.lang.CharSequence curso;
    private java.math.BigDecimal valorMensalidade;
    private java.lang.CharSequence periodo;
    private java.lang.CharSequence turno;
    private java.lang.CharSequence cpf;
    private java.lang.CharSequence codigoMatricula;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(br.com.jdsb.hub.avro.CandidatoEvent.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.nome)) {
        this.nome = data().deepCopy(fields()[0].schema(), other.nome);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.dataNascimento)) {
        this.dataNascimento = data().deepCopy(fields()[1].schema(), other.dataNascimento);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.curso)) {
        this.curso = data().deepCopy(fields()[2].schema(), other.curso);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.valorMensalidade)) {
        this.valorMensalidade = data().deepCopy(fields()[3].schema(), other.valorMensalidade);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.periodo)) {
        this.periodo = data().deepCopy(fields()[4].schema(), other.periodo);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.turno)) {
        this.turno = data().deepCopy(fields()[5].schema(), other.turno);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.cpf)) {
        this.cpf = data().deepCopy(fields()[6].schema(), other.cpf);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.codigoMatricula)) {
        this.codigoMatricula = data().deepCopy(fields()[7].schema(), other.codigoMatricula);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
    }

    /**
     * Creates a Builder by copying an existing CandidatoEvent instance
     * @param other The existing instance to copy.
     */
    private Builder(br.com.jdsb.hub.avro.CandidatoEvent other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.nome)) {
        this.nome = data().deepCopy(fields()[0].schema(), other.nome);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.dataNascimento)) {
        this.dataNascimento = data().deepCopy(fields()[1].schema(), other.dataNascimento);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.curso)) {
        this.curso = data().deepCopy(fields()[2].schema(), other.curso);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.valorMensalidade)) {
        this.valorMensalidade = data().deepCopy(fields()[3].schema(), other.valorMensalidade);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.periodo)) {
        this.periodo = data().deepCopy(fields()[4].schema(), other.periodo);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.turno)) {
        this.turno = data().deepCopy(fields()[5].schema(), other.turno);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.cpf)) {
        this.cpf = data().deepCopy(fields()[6].schema(), other.cpf);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.codigoMatricula)) {
        this.codigoMatricula = data().deepCopy(fields()[7].schema(), other.codigoMatricula);
        fieldSetFlags()[7] = true;
      }
    }

    /**
      * Gets the value of the 'nome' field.
      * @return The value.
      */
    public java.lang.CharSequence getNome() {
      return nome;
    }


    /**
      * Sets the value of the 'nome' field.
      * @param value The value of 'nome'.
      * @return This builder.
      */
    public br.com.jdsb.hub.avro.CandidatoEvent.Builder setNome(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.nome = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'nome' field has been set.
      * @return True if the 'nome' field has been set, false otherwise.
      */
    public boolean hasNome() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'nome' field.
      * @return This builder.
      */
    public br.com.jdsb.hub.avro.CandidatoEvent.Builder clearNome() {
      nome = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'dataNascimento' field.
      * @return The value.
      */
    public java.lang.CharSequence getDataNascimento() {
      return dataNascimento;
    }


    /**
      * Sets the value of the 'dataNascimento' field.
      * @param value The value of 'dataNascimento'.
      * @return This builder.
      */
    public br.com.jdsb.hub.avro.CandidatoEvent.Builder setDataNascimento(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.dataNascimento = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'dataNascimento' field has been set.
      * @return True if the 'dataNascimento' field has been set, false otherwise.
      */
    public boolean hasDataNascimento() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'dataNascimento' field.
      * @return This builder.
      */
    public br.com.jdsb.hub.avro.CandidatoEvent.Builder clearDataNascimento() {
      dataNascimento = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'curso' field.
      * @return The value.
      */
    public java.lang.CharSequence getCurso() {
      return curso;
    }


    /**
      * Sets the value of the 'curso' field.
      * @param value The value of 'curso'.
      * @return This builder.
      */
    public br.com.jdsb.hub.avro.CandidatoEvent.Builder setCurso(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.curso = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'curso' field has been set.
      * @return True if the 'curso' field has been set, false otherwise.
      */
    public boolean hasCurso() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'curso' field.
      * @return This builder.
      */
    public br.com.jdsb.hub.avro.CandidatoEvent.Builder clearCurso() {
      curso = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'valorMensalidade' field.
      * @return The value.
      */
    public java.math.BigDecimal getValorMensalidade() {
      return valorMensalidade;
    }


    /**
      * Sets the value of the 'valorMensalidade' field.
      * @param value The value of 'valorMensalidade'.
      * @return This builder.
      */
    public br.com.jdsb.hub.avro.CandidatoEvent.Builder setValorMensalidade(java.math.BigDecimal value) {
      validate(fields()[3], value);
      this.valorMensalidade = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'valorMensalidade' field has been set.
      * @return True if the 'valorMensalidade' field has been set, false otherwise.
      */
    public boolean hasValorMensalidade() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'valorMensalidade' field.
      * @return This builder.
      */
    public br.com.jdsb.hub.avro.CandidatoEvent.Builder clearValorMensalidade() {
      valorMensalidade = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'periodo' field.
      * @return The value.
      */
    public java.lang.CharSequence getPeriodo() {
      return periodo;
    }


    /**
      * Sets the value of the 'periodo' field.
      * @param value The value of 'periodo'.
      * @return This builder.
      */
    public br.com.jdsb.hub.avro.CandidatoEvent.Builder setPeriodo(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.periodo = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'periodo' field has been set.
      * @return True if the 'periodo' field has been set, false otherwise.
      */
    public boolean hasPeriodo() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'periodo' field.
      * @return This builder.
      */
    public br.com.jdsb.hub.avro.CandidatoEvent.Builder clearPeriodo() {
      periodo = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'turno' field.
      * @return The value.
      */
    public java.lang.CharSequence getTurno() {
      return turno;
    }


    /**
      * Sets the value of the 'turno' field.
      * @param value The value of 'turno'.
      * @return This builder.
      */
    public br.com.jdsb.hub.avro.CandidatoEvent.Builder setTurno(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.turno = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'turno' field has been set.
      * @return True if the 'turno' field has been set, false otherwise.
      */
    public boolean hasTurno() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'turno' field.
      * @return This builder.
      */
    public br.com.jdsb.hub.avro.CandidatoEvent.Builder clearTurno() {
      turno = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'cpf' field.
      * @return The value.
      */
    public java.lang.CharSequence getCpf() {
      return cpf;
    }


    /**
      * Sets the value of the 'cpf' field.
      * @param value The value of 'cpf'.
      * @return This builder.
      */
    public br.com.jdsb.hub.avro.CandidatoEvent.Builder setCpf(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.cpf = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'cpf' field has been set.
      * @return True if the 'cpf' field has been set, false otherwise.
      */
    public boolean hasCpf() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'cpf' field.
      * @return This builder.
      */
    public br.com.jdsb.hub.avro.CandidatoEvent.Builder clearCpf() {
      cpf = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'codigoMatricula' field.
      * @return The value.
      */
    public java.lang.CharSequence getCodigoMatricula() {
      return codigoMatricula;
    }


    /**
      * Sets the value of the 'codigoMatricula' field.
      * @param value The value of 'codigoMatricula'.
      * @return This builder.
      */
    public br.com.jdsb.hub.avro.CandidatoEvent.Builder setCodigoMatricula(java.lang.CharSequence value) {
      validate(fields()[7], value);
      this.codigoMatricula = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'codigoMatricula' field has been set.
      * @return True if the 'codigoMatricula' field has been set, false otherwise.
      */
    public boolean hasCodigoMatricula() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'codigoMatricula' field.
      * @return This builder.
      */
    public br.com.jdsb.hub.avro.CandidatoEvent.Builder clearCodigoMatricula() {
      codigoMatricula = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public CandidatoEvent build() {
      try {
        CandidatoEvent record = new CandidatoEvent();
        record.nome = fieldSetFlags()[0] ? this.nome : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.dataNascimento = fieldSetFlags()[1] ? this.dataNascimento : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.curso = fieldSetFlags()[2] ? this.curso : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.valorMensalidade = fieldSetFlags()[3] ? this.valorMensalidade : (java.math.BigDecimal) defaultValue(fields()[3]);
        record.periodo = fieldSetFlags()[4] ? this.periodo : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.turno = fieldSetFlags()[5] ? this.turno : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.cpf = fieldSetFlags()[6] ? this.cpf : (java.lang.CharSequence) defaultValue(fields()[6]);
        record.codigoMatricula = fieldSetFlags()[7] ? this.codigoMatricula : (java.lang.CharSequence) defaultValue(fields()[7]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<CandidatoEvent>
    WRITER$ = (org.apache.avro.io.DatumWriter<CandidatoEvent>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<CandidatoEvent>
    READER$ = (org.apache.avro.io.DatumReader<CandidatoEvent>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeString(this.nome);

    out.writeString(this.dataNascimento);

    out.writeString(this.curso);

    out.writeString(this.valorMensalidade.toString());

    out.writeString(this.periodo);

    out.writeString(this.turno);

    out.writeString(this.cpf);

    out.writeString(this.codigoMatricula);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.nome = in.readString(this.nome instanceof Utf8 ? (Utf8)this.nome : null);

      this.dataNascimento = in.readString(this.dataNascimento instanceof Utf8 ? (Utf8)this.dataNascimento : null);

      this.curso = in.readString(this.curso instanceof Utf8 ? (Utf8)this.curso : null);

      this.valorMensalidade = new java.math.BigDecimal(in.readString());

      this.periodo = in.readString(this.periodo instanceof Utf8 ? (Utf8)this.periodo : null);

      this.turno = in.readString(this.turno instanceof Utf8 ? (Utf8)this.turno : null);

      this.cpf = in.readString(this.cpf instanceof Utf8 ? (Utf8)this.cpf : null);

      this.codigoMatricula = in.readString(this.codigoMatricula instanceof Utf8 ? (Utf8)this.codigoMatricula : null);

    } else {
      for (int i = 0; i < 8; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.nome = in.readString(this.nome instanceof Utf8 ? (Utf8)this.nome : null);
          break;

        case 1:
          this.dataNascimento = in.readString(this.dataNascimento instanceof Utf8 ? (Utf8)this.dataNascimento : null);
          break;

        case 2:
          this.curso = in.readString(this.curso instanceof Utf8 ? (Utf8)this.curso : null);
          break;

        case 3:
          this.valorMensalidade = new java.math.BigDecimal(in.readString());
          break;

        case 4:
          this.periodo = in.readString(this.periodo instanceof Utf8 ? (Utf8)this.periodo : null);
          break;

        case 5:
          this.turno = in.readString(this.turno instanceof Utf8 ? (Utf8)this.turno : null);
          break;

        case 6:
          this.cpf = in.readString(this.cpf instanceof Utf8 ? (Utf8)this.cpf : null);
          break;

        case 7:
          this.codigoMatricula = in.readString(this.codigoMatricula instanceof Utf8 ? (Utf8)this.codigoMatricula : null);
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










